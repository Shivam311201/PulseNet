apiVersion: v1
kind: PersistentVolume
metadata:
  name: zookeeper-pv
  labels:
    app: pulsenet
    component: zookeeper
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: "/mnt/data/zookeeper"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zookeeper-pvc
  labels:
    app: pulsenet
    component: zookeeper
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv
  labels:
    app: pulsenet
    component: kafka
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: "/mnt/data/kafka"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
  labels:
    app: pulsenet
    component: kafka
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pulsenet-zookeeper
  labels:
    app: pulsenet
    component: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pulsenet
      component: zookeeper
  template:
    metadata:
      labels:
        app: pulsenet
        component: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.3.0
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        volumeMounts:
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper/data
      volumes:
      - name: zookeeper-data
        emptyDir: {}
        # persistentVolumeClaim:
        #   claimName: zookeeper-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pulsenet-zookeeper
  labels:
    app: pulsenet
    component: zookeeper
spec:
  ports:
  - port: 2181
    targetPort: 2181
    name: client
  selector:
    app: pulsenet
    component: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pulsenet-kafka
  labels:
    app: pulsenet
    component: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pulsenet
      component: kafka
  template:
    metadata:
      labels:
        app: pulsenet
        component: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.3.0
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "pulsenet-zookeeper:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://pulsenet-kafka:9092"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
      volumes:
      - name: kafka-data
        emptyDir: {}
        # persistentVolumeClaim:
        #   claimName: kafka-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pulsenet-kafka
  labels:
    app: pulsenet
    component: kafka
spec:
  ports:
  - port: 9092
    targetPort: 9092
    name: kafka
  selector:
    app: pulsenet
    component: kafka